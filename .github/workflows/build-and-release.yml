name: Release

on:
  release:
    types: [created]

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd web
        npm ci

    - name: Build frontend
      run: |
        cd web
        npm run build

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 1
      run: |
        if [ "${{ matrix.goos }}" = "linux" ]; then
          # 为 Linux 安装 CGO 依赖
          sudo apt-get update
          sudo apt-get install -y gcc-multilib
          if [ "${{ matrix.goarch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
            export CC=aarch64-linux-gnu-gcc
          fi
        fi
        
        go build -ldflags="-s -w" -o crontab-go-${{ matrix.suffix }} ./cmd

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: crontab-go-${{ matrix.suffix }}
        path: crontab-go-${{ matrix.suffix }}


  upload-assets:
    needs: [build-binaries]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          crontab-go-*/crontab-go-*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}